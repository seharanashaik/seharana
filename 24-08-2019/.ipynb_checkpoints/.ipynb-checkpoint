{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "3\n",
      "1\n",
      "No\n",
      "3\n",
      "No\n",
      "6\n",
      "yes\n"
     ]
    }
   ],
   "source": [
    "p=int(input())\n",
    "t=int(input())\n",
    "for i in range(t):\n",
    "    n=int(input())\n",
    "    c=0\n",
    "    special_flag=0\n",
    "    for j in range(2,(n//2)+1):           #PRIME FACTOR INA LEVEL\n",
    "        if(n%j==0):\n",
    "            prime_flag=1\n",
    "            for k in range(2,(j//2)+1):\n",
    "                if(j%k==0):\n",
    "                    prime_flag=0\n",
    "                    break\n",
    "            if(prime_flag==1):\n",
    "                c+=1\n",
    "                if c>=p:\n",
    "                    special_flag=1\n",
    "                    break\n",
    "    if(special_flag==1):\n",
    "        print(\"yes\")\n",
    "    else:\n",
    "        print(\"No\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "4\n",
      "4 6\n",
      "6 8\n",
      "8 EXIT\n",
      "\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "n=input()\n",
    "even=list()          #ODD EXIT\n",
    "while (n!='EXIT'):\n",
    "    n=int(n)\n",
    "    if (n%2==0):\n",
    "        even.append(n)\n",
    "        print(n,end=' ')\n",
    "    n=input()\n",
    "print('\\n',max(even),sep='')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
